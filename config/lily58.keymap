/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        backtick {
            bindings = <&kp GRAVE>;
            key-positions = <50 0>;
            timeout-ms = <30000>;
            layers = <0>;
        };

        strip_bye {
            bindings = <&kp LS(GRAVE)>;
            key-positions = <50 0 57>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        plus {
            bindings = <&kp LS(EQUAL)>;
            key-positions = <50 57 23>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        reverse_backslash {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <50 57 22>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        game_layer {
            bindings = <&to 5>;
            key-positions = <50 57 12>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        normal_layer {
            bindings = <&to 0>;
            key-positions = <50 57 12>;
            timeout-ms = <30000>;
            layers = <5>;
        };

        forcw_close {
            bindings = <&kp LA(F4)>;
            key-positions = <11 53>;
            timeout-ms = <30000>;
            layers = <5>;
        };

        win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <52 0>;
            timeout-ms = <30000>;
            layers = <5>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <52 12>;
            timeout-ms = <30000>;
            layers = <5>;
        };

        move5to6 {
            bindings = <&to 6>;
            key-positions = <12 50>;
            timeout-ms = <30000>;
            layers = <5>;
        };

        move6to5 {
            bindings = <&to 5>;
            key-positions = <12 50>;
            timeout-ms = <30000>;
            layers = <6>;
        };

        rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <50 57 32>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <50 57 20>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        petik1 {
            bindings = <&kp SQT>;
            key-positions = <50 57 33>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <57 1 52>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <57 2 52>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        sel_all {
            bindings = <&kp LC(A)>;
            key-positions = <57 3 52>;
            timeout-ms = <30000>;
            layers = <0 3>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <50 57 11>;
            timeout-ms = <30000>;
            layers = <0 3 7>;
        };
    };

    macros {
        kurung: kurung {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N9) &kp LS(N0)>;
            label = "KURUNG";
        };

        kurung2: kurung2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_BRACKET) &kp LS(RIGHT_BRACKET)>;
            label = "KURUNG2";
        };

        kurung3: kurung3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "KURUNG3";
        };

        replace: replace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp LCLK &mkp LCLK &kp LC(V)>;
            label = "REPLACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  ENTER |  | SPACE | RAISE| BSPC  | GUI   |

            bindings = <
&kp BACKSPACE  &kp N1  &kp N2  &kp N3     &kp N4     &kp N5                               &kp N6        &kp N7     &kp N8     &kp N9   &kp N0        &kp BACKSPACE
&kp TAB        &kp Q   &kp W   &kp E      &kp R      &kp T                                &kp Y         &kp U      &kp I      &kp O    &kp P         &kp MINUS
&kp LCTRL      &kp A   &kp S   &kp D      &kp F      &kp G                                &kp H         &kp J      &kp K      &kp L    &kp SEMI      &kp ENTER
&mkp LCLK      &kp Z   &kp X   &kp C      &kp V      &kp B      &kp CAPS    &mo 4         &kp N         &kp M      &kp COMMA  &kp DOT  &kp LS(FSLH)  &kp ENTER
                               &kp LSHFT  &kp SPACE  &kp SPACE  &to 7       &kp LEFT_WIN  &kp LEFT_ALT  &kp RSHFT  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans           &trans    &trans    &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                          &kp F7     &kp F8     &kp F9           &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans     &kp MINUS  &kp KP_PLUS      &kp LBRC  &kp RBRC  &kp PIPE
                                        &trans        &trans        &trans        &trans    &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans       &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE     &kp LS(NUMBER_1)        &kp LS(NUMBER_2)  &kp LS(NUMBER_3)         &kp LS(NUMBER_4)      &kp LS(N5)                              &kp LS(NUMBER_6)  &kp LS(N7)            &kp LS(N8)             &kp LS(N9)        &kp LS(N0)                &kp BACKSPACE
&kp LC(LS(Z))  &kp LS(LC(LEFT_ARROW))  &kp UP_ARROW      &kp LS(LC(RIGHT_ARROW))  &kp LS(LC(UP_ARROW))  &trans                                  &trans            &kp LC(LS(UP_ARROW))  &kp LS(LEFT_BRACKET)   &kp LS(NUMBER_4)  &kp LS(NON_US_BACKSLASH)  &kp LS(MINUS)
&kp LC(Y)      &kp LEFT_ARROW          &kp DOWN          &kp RIGHT                &kp LC(LS(R))         &trans                                  &trans            &kp LC(LS(DOWN))      &kp LS(RIGHT_BRACKET)  &kp LS(SQT)       &kp LS(SEMICOLON)         &kp LS(ENTER)
&mkp LCLK      &kp LC(Z)               &kp LC(X)         &kp LC(C)                &kp LC(V)             &kp LC(LS(Z))  &trans    &trans         &trans            &trans                &kp LS(COMMA)          &kp LS(PERIOD)    &kp SLASH                 &trans
                                                         &mo 7                    &kp SPACE             &kp LC(Z)      &to 5     &kp LC(SLASH)  &kp END           &kp LSHFT             &kp LEFT_WIN
            >;
        };

        layer_4 {
            bindings = <
&kp GRAVE     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp F6        &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans        &trans  &trans  &trans  &trans   &kp F12
&trans        &trans        &trans        &trans        &trans        &trans                          &trans        &trans  &trans  &trans  &trans   &trans
&kp LEFT_WIN  &kp LEFT_WIN  &trans        &trans        &trans        &trans        &trans    &trans  &trans        &trans  &trans  &trans  &trans   &trans
                                          &kp LSHFT     &kp LSHFT     &kp SPACE     &to 0     &to 5   &kp LEFT_ALT  &trans  &trans
            >;
        };

        game_layer {
            bindings = <
&kp M      &kp N1  &kp N2  &kp N3     &kp N4          &kp N5                                                  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp ESC
&kp TAB    &kp Q   &kp W   &kp E      &kp R           &kp T                                                   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S   &kp D      &kp F           &kp G                                                   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp ENTER
&mkp LCLK  &kp Z   &kp X   &kp C      &kp V           &kp B      &kp LG(LC(RIGHT))    &kp LG(LC(LEFT_ARROW))  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                           &kp LSHFT  &kp LEFT_SHIFT  &kp SPACE  &to 0                &kp LG(LS(Q))           &kp SPACE  &kp RSHFT  &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_6 {
            bindings = <
&kp M      &kp N1          &kp N2          &kp N3     &kp N4          &kp N5                                                  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp ESC
&kp TAB    &kp Q           &kp UP_ARROW    &kp E      &kp R           &kp T                                                   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp F           &kp G                                                   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp ENTER
&mkp LCLK  &kp Z           &kp X           &kp C      &kp V           &kp B      &kp LG(LC(RIGHT))    &kp LG(LC(LEFT_ARROW))  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                                           &kp LSHFT  &kp LEFT_SHIFT  &kp SPACE  &to 0                &kp LG(LS(Q))           &kp SPACE  &kp RSHFT  &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_7 {
            bindings = <
&kp GRAVE       &kp LC(C)       &kp LC(V)     &kp LC(A)       &kp LA(F4)  &trans                       &trans  &trans  &trans  &kp LG(LS(A))  &kp LG(LS(S))  &kp DEL
&kp LG(LS(Q))   &kp HOME        &kp UP_ARROW  &kp END         &trans      &trans                       &trans  &trans  &trans  &trans         &kp LC(LS(F))  &kp LS(GRAVE)
&kp LEFT_SHIFT  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT       &replace    &trans                       &trans  &trans  &trans  &trans         &trans         &kp ENTER
&kp LEFT_SHIFT  &trans          &trans        &kp LA(LS(F4))  &trans      &trans     &trans    &trans  &trans  &trans  &trans  &trans         &trans         &trans
                                              &kp LEFT_SHIFT  &kp SPACE   &kp SPACE  &to 0     &trans  &trans  &trans  &trans
            >;
        };
    };
};
