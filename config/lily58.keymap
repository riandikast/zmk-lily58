/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        space_right_arrow {
            bindings = <&kp RIGHT>;
            key-positions = <27 52>;
            layers = <0>;
        };

        space_left_arrow {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <25 52>;
            layers = <0>;
        };

        up {
            bindings = <&kp UP_ARROW>;
            key-positions = <14 52>;
            layers = <0>;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <26 52>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <12 52>;
            layers = <3>;
        };

        layer0_delete {
            bindings = <&kp DEL>;
            key-positions = <56 11>;
            layers = <0>;
        };

        layer0_kurung {
            bindings = <&kurung>;
            key-positions = <15 52>;
            layers = <0>;
        };

        layer0_kurung2 {
            bindings = <&kurung2>;
            key-positions = <13 52>;
            layers = <0>;
        };

        layer0_kurung3 {
            bindings = <&kurung3>;
            key-positions = <14 52>;
            layers = <0>;
        };

        layer0_caps {
            bindings = <&kp CLCK>;
            key-positions = <26 52>;
            layers = <0>;
        };

        layer0_win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <0 52>;
            layers = <0>;
        };

        game_wintab {
            bindings = <&kp LG(TAB)>;
            key-positions = <0 52>;
            layers = <5>;
        };
    };

    macros {
        kurung: kurung {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N9) &kp LS(N0)>;
            label = "KURUNG";
        };

        kurung2: kurung2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_BRACKET) &kp LS(RIGHT_BRACKET)>;
            label = "KURUNG2";
        };

        kurung3: kurung3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "KURUNG3";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  ENTER |  | SPACE | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC      &kp N1  &kp N2  &kp N3  &kp N4          &kp N5                           &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp LA(TAB)  &kp Q   &kp W   &kp E   &kp R           &kp T                            &kp Y      &kp U      &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL    &kp A   &kp S   &kp D   &kp F           &kp G                            &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&mkp LCLK    &kp Z   &kp X   &kp C   &kp V           &kp B      &kp LBKT    &kp RBKT  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                             &tog 3  &kp LEFT_SHIFT  &kp SPACE  &tog 5      &tog 4    &kp SPACE  &kp RSHFT  &mo 1
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans           &trans    &trans    &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                          &kp F7     &kp F8     &kp F9           &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans     &kp MINUS  &kp KP_PLUS      &kp LBRC  &kp RBRC  &kp PIPE
                                        &trans        &trans        &trans        &trans    &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans       &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&kp LC(Z)      &kp LC(C)               &kp LC(V)     &kp LC(A)                &trans     &trans                           &trans  &trans  &trans  &trans  &trans                &trans
&kp BACKSPACE  &kp LS(LC(LEFT_ARROW))  &kp UP_ARROW  &kp LS(LC(RIGHT_ARROW))  &trans     &trans                           &trans  &trans  &trans  &trans  &kp NON_US_BACKSLASH  &kp EQUAL
&kp LC(Y)      &kp LEFT_ARROW          &kp DOWN      &kp RIGHT                &kp LC(X)  &trans                           &trans  &trans  &trans  &trans  &trans                &trans
&mkp LCLK      &kp HOME                &kp DEL       &kp END                  &trans     &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans                &trans
                                                     &tog 0                   &kp LSHFT  &kp LC(LS(Z))  &trans    &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp GRAVE     &kp F1        &kp F2  &kp F3    &kp F4     &kp F5                    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans        &trans        &trans  &trans    &trans     &trans                    &trans  &trans  &trans  &trans  &trans   &kp F12
&trans        &trans        &trans  &trans    &trans     &trans                    &trans  &trans  &trans  &trans  &trans   &trans
&kp LEFT_WIN  &kp LEFT_WIN  &trans  &trans    &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans   &trans
                                    &kp LALT  &kp LSHFT  &trans  &tog 0    &tog 0  &tog 0  &trans  &trans
            >;
        };

        game_layer {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3        &kp N4          &kp N5                                    &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp M      &kp Q   &kp W   &kp E         &kp R           &kp T                                     &kp Y      &kp U      &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S   &kp D         &kp F           &kp G                                     &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&mkp LCLK  &kp Z   &kp X   &kp C         &kp V           &kp B      &kp LG(LC(RIGHT))    &kp RBKT  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                           &kp LEFT_ALT  &kp LEFT_SHIFT  &kp SPACE  &tog 0               &tog 4    &kp SPACE  &kp RSHFT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
